openapi: 3.0.0
info:
  title: Vehicle Management API
  description: API для управления коллекцией объектов Vehicle
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /shop/vehicles/search/by-number-of-wheels/{from}/{to}:
    get:
      summary: Найти транспортные средства по числу колёс в диапазоне
      description: Возвращает массив транспортных средств с числом колёс в заданном диапазоне
      parameters:
        - name: from
          in: path
          description: От включительно
          required: true
          schema:
            $ref: '#/components/schemas/VehicleNumberOfWheels'
        - name: to
          in: path
          description: До включительно
          required: true
          schema:
            $ref: '#/components/schemas/VehicleNumberOfWheels'
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleAllFieldsExistedRestricted'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Тип числа колес неверный

  /shop/vehicles/fix-distance/{id}:
    post:
      summary: Сбросить пробег транспортного средства
      description: Сбрасывает счётчик пробега транспортного средства до нуля.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/VehicleId'
      responses:
        '204':
          description: Пробег успешно сброшен
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WrongVehicleIdFormatAnswer'
        '404':
          description: Транспортное средство не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoVehicleWithIdAnswer'

components:
  schemas:
    VehicleUserSetFields:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/VehicleName'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        enginePower:
          $ref: '#/components/schemas/VehicleEnginePower'
        numberOfWheels:
          $ref: '#/components/schemas/VehicleNumberOfWheels'
        distanceTravelled:
          $ref: '#/components/schemas/VehicleDistanceTravelled'
        type:
          $ref: '#/components/schemas/VehicleType'
    VehicleUserSetFieldsExistedRestricted:
      allOf:
        - $ref: '#/components/schemas/VehicleUserSetFields'
        - required:
          - name
          - coordinates
          - enginePower
          - type
    VehicleAllFieldsNoId:
      allOf:
        - type: object
          properties:
            creationDate:
              $ref: '#/components/schemas/VehicleCreationDate'
        - $ref: '#/components/schemas/VehicleUserSetFields'
    VehicleAllFieldsNoIdExistedRestricted:
      allOf:
        - $ref: '#/components/schemas/VehicleAllFieldsNoId'
        - required:
          - name
          - coordinates
          - creationDate
          - enginePower
          - type
    VehicleAllFields:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/VehicleId'
            creationDate:
              $ref: '#/components/schemas/VehicleCreationDate'
        - $ref: '#/components/schemas/VehicleUserSetFields'
    VehicleAllFieldsExistedRestricted:
      allOf:
        - $ref: '#/components/schemas/VehicleAllFields'
        - required:
          - id
          - name
          - coordinates
          - creationDate
          - enginePower
          - type
    VehicleId:
      description: Уникальный идентификатор транспортного средства
      type: number
      format: int64
      minimum: 1
      example: 123
    VehicleName: 
      description: Название транспортного средства
      type: string
      minLength: 1
      example: Kia Rio
    Coordinates:
      type: object
      properties:
        x:
          $ref: '#/components/schemas/CoordinateX'
        y:
          $ref: '#/components/schemas/CoordinateY'
      required: 
        - y
    VehicleCreationDate:
      description: Дата создания транспортного средства
      type: string
      format: yyyy-mm-dd
      example: 2007-12-03
    VehicleEnginePower:
      description: Сила мотора транспортного средства в лошадиных силах
      type: number
      format: int32
      minimum: 1
      example: 200
    VehicleDistanceTravelled:
      description: Кол-во километров, которое преодолело транспортное средство в километрах (пробег)
      type: number
      format: int32
      minimum: 1
      example: 11003
    VehicleNumberOfWheels:
      description: Кол-во колес у транспортного средства
      type: number
      example: 4
    VehicleType:
      type: string
      description: Тип транспортного средства
      enum:
        - HELICOPTER
        - DRONE
        - SHIP
        - BICYCLE
        - CHOPPER
    CoordinateX:
      description: Координата X
      type: number
      format: float64
      example: 31412
    CoordinateY:
      description: Координата Y
      type: number
      format: float64
      maximum: 126
      example: 100
    WrongVehicleIdFormatAnswer:
      type: object
      properties:
        message:
          type: string
          example: Параметр id имеет некорректный формат
    NoVehicleWithIdAnswer:
      type: object
      properties:
        message:
          type: string
          example: Транспортное средство с указанным id не найдено